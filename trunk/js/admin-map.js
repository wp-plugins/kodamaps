// Generated by CoffeeScript 1.9.2
(function() {
  var initialize;

  initialize = function() {
    var initLat, initLng, initZoom, inputAddress, inputLatLng, latLng, map, mapOptions, marker;
    initLat = jQuery('#kodamaps-txt-input-lat').val() || 0;
    initLng = jQuery('#kodamaps-txt-input-lng').val() || 0;
    initZoom = initLat || initLng ? 16 : 0;
    mapOptions = {
      zoom: initZoom,
      center: new google.maps.LatLng(initLat, initLng)
    };
    map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
    latLng = new google.maps.LatLng(initLat, initLng);
    marker = new google.maps.Marker({
      position: latLng,
      draggable: true,
      map: map
    });
    inputLatLng = function() {
      var address, geocoder;
      address = jQuery('#kodamaps-txt-input-address').val();
      geocoder = new google.maps.Geocoder();
      geocoder.geocode({
        'address': address
      }, function(results, status) {
        if (status === google.maps.GeocoderStatus.OK) {
          latLng = new google.maps.LatLng(results[0].geometry.location.k, results[0].geometry.location.D);
          marker.position = latLng;
          marker.setMap(map);
          map.panTo(new google.maps.LatLng(marker.getPosition().k, marker.getPosition().D));
          jQuery('#kodamaps-txt-input-lat').val(marker.getPosition().k);
          jQuery('#kodamaps-txt-input-lng').val(marker.getPosition().D);
          jQuery('.kodamaps-postdata-address').val(address);
          jQuery('.kodamaps-postdata-lat').val(marker.getPosition().k);
          jQuery('.kodamaps-postdata-lng').val(marker.getPosition().D);
        }
      });
    };
    inputAddress = function() {
      var geocoder;
      latLng = new google.maps.LatLng(jQuery('#kodamaps-txt-input-lat').val(), jQuery('#kodamaps-txt-input-lng').val());
      geocoder = new google.maps.Geocoder();
      geocoder.geocode({
        'latLng': latLng
      }, function(results, status) {
        var address;
        if (status === google.maps.GeocoderStatus.OK) {
          address = results[0].formatted_address;
          marker.position = latLng;
          marker.setMap(map);
          map.panTo(new google.maps.LatLng(marker.getPosition().k, marker.getPosition().D));
          jQuery('#kodamaps-txt-input-address').val(address);
          jQuery('#kodamaps-txt-input-lat').val(marker.getPosition().k);
          jQuery('#kodamaps-txt-input-lng').val(marker.getPosition().D);
          jQuery('.kodamaps-postdata-address').val(address);
          jQuery('.kodamaps-postdata-lat').val(marker.getPosition().k);
          jQuery('.kodamaps-postdata-lng').val(marker.getPosition().D);
        }
      });
    };
    google.maps.event.addListener(map, 'click', function(event) {
      marker.position = event.latLng;
      marker.setMap(map);
      console.log(marker.getPosition().lat());
      console.log(marker.getPosition().lng());
      jQuery('#kodamaps-txt-input-lat').val(marker.getPosition().lat());
      jQuery('#kodamaps-txt-input-lng').val(marker.getPosition().lng());
      inputAddress();
    });
    google.maps.event.addListener(marker, 'dragend', function() {
      console.log(marker.getPosition().lat());
      console.log(marker.getPosition().lng());
      jQuery('#kodamaps-txt-input-lat').val(marker.getPosition().lat());
      jQuery('#kodamaps-txt-input-lng').val(marker.getPosition().lng());
      inputAddress();
    });
    jQuery('#kodamaps-txt-input-address, #kodamaps-txt-input-lat, #kodamaps-txt-input-lng').change(function() {
      if (this.id === 'kodamaps-txt-input-address') {
        inputLatLng();
      } else {
        inputAddress();
      }
    });
  };

  window.onload = initialize;

}).call(this);
